---
import "../styles/globals.css";
import type { Frontmatter } from "../config";
import { OPEN_GRAPH, SITE } from "../config";

export interface Props {
  frontmatter?: Frontmatter;
}

const { frontmatter } = Astro.props as Props;

const canonicalUrl = new URL(Astro.url.pathname, Astro.site);

const formattedContentTitle = frontmatter
    ? `${frontmatter.title} ðŸš€ ${SITE.title}`
  : SITE.title;

const imageSrc = frontmatter?.image?.src ?? OPEN_GRAPH.image.src;
const canonicalImageSrc = new URL(imageSrc, Astro.site);
const imageAlt = frontmatter?.image?.alt ?? OPEN_GRAPH.image.alt;
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width" />
<meta name="generator" content={Astro.generator} />

<link rel="icon" type="image/svg+xml" href="/favicon.svg" />

<link rel="sitemap" href="/sitemap.xml" />

<link rel="canonical" href={canonicalUrl} />

<meta property="og:title" content={formattedContentTitle} />
<meta property="og:type" content="article" />
<meta property="og:url" content={canonicalUrl} />
<meta property="og:locale" content={SITE.defaultLanguage} />
<meta property="og:image" content={canonicalImageSrc} />
<meta property="og:image:alt" content={imageAlt} />
<meta
	name="description"
	property="og:description"
	content={frontmatter?.description ?? SITE.description}
/>
<meta property="og:site_name" content={SITE.title} />

<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:site" content={OPEN_GRAPH.twitter} />
<meta name="twitter:title" content={formattedContentTitle} />
<meta name="twitter:description" content={frontmatter?.description ?? SITE.description} />
<meta name="twitter:image" content={canonicalImageSrc} />
<meta name="twitter:image:alt" content={imageAlt} />
