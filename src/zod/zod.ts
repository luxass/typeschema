import ts from 'typescript';

import { TypeSchemaTree } from '../types';
import { writeZodSchema } from './writer';

export async function buildZodSchema(trees: TypeSchemaTree[]): Promise<string> {
  console.log(JSON.stringify(trees, null, 2));

  const printer = ts.createPrinter({
    newLine: ts.NewLineKind.LineFeed
  });
  const printSourceFile = ts.createSourceFile('typeschema-zod.ts', '', ts.ScriptTarget.Latest);
  const print = (node: ts.Node) =>
    printer.printNode(ts.EmitHint.Unspecified, node, printSourceFile);

  const bannerText = ts.factory.createJSDocComment(
    // config?.bannerText || 'Generated by TypeSchema',
    'Generated by TypeSchema',
    []
  );

  const schemas = writeZodSchema(trees);

  return `${print(bannerText)}\nimport { z } from 'zod';\n\n//third part imports\n\n${schemas
    .map((schema) => print(schema))
    .join('\n\n')}`;
}
