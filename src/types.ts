import ts from 'typescript';

export interface TypeSchemaConfig {
  zod?: ZodConfig;
  json?: JSONConfig;
}

export interface PrettiedTags {
  tag: string;
  comment?: string | ts.NodeArray<ts.JSDocComment>;
}

export interface JSDocOptions {
  /**
   * Filter types by tag.
   */
  include?: string;

  /**
   * Use Tags for validation
   */
  useTags?: boolean;
}

export interface ZodConfig {
  /**
   * Path to input files.
   */
  input: string[];

  /**
   * Path to output directory.
   */
  outputDir: string;

  /**
   * Include exports in the output.
   */
  includeExports?: boolean;

  /**
   * JSDoc options.
   */
  jsdoc?: JSDocOptions;

  /**
   * TypeScript options.
   */
  tsconfig?: string | ts.CompilerOptions;

  /**
   * Add a banner for generated files.
   * @default 'Generated by TypeSchema'
   */
  bannerText?: string;
}

export interface JSONConfig {
  /**
   * Path to input files.
   */
  input: string[];

  /**
   * Path to output directory.
   */
  outputDir: string;

  /**
   * Include exports in the output.
   */
  includeExports?: boolean;

  /**
   * JSDoc options.
   */
  jsdoc?: JSDocOptions;

  /**
   * TypeScript options.
   */
  tsconfig?: string | ts.CompilerOptions;
}

export interface Metadata {
  isOptional?: boolean;
  dependencies: string[];
  tags?: PrettiedTags[];
  heritageClauses?: string[];
  useTags?: boolean;
  sourceFile: ts.SourceFile;
}

export interface TypeSchemaNode {
  node: ts.InterfaceDeclaration | ts.TypeAliasDeclaration | ts.EnumDeclaration;
  sourceFile: ts.SourceFile;
}